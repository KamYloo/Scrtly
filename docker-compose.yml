services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports: 
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - scrtly-net

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBIT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBIT_PASS}"
    ports:
      - "15672:15672"
    networks:
      - scrtly-net
      
  backend:
    image: kamyloo/scrtly-backend
    restart: always
    env_file:
      - .env
    ports: 
      - "5001:5001"
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      SERVER_PORT: "5001"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/${POSTGRES_DB}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      SPRING_RABBITMQ_PORT: "5672"
      MAIL_USERNAME: "${MAIL_USERNAME}"
      MAIL_PASSWORD: "${MAIL_PASSWORD}"
      SECRET_KEY: "${SECRET_KEY}"
      APPLICATION_FILE_CDN: "${APPLICATION_FILE_CDN}"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - scrtly-net

  frontend:
    image: kamyloo/scrtly-frontend
    restart: always
    ports: 
      - "5002:5002"
    environment:
      VITE_APP_BACKEND_URL: http://145.239.91.66:5001
    depends_on:
      - backend
    networks:
      - scrtly-net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email ${CERTBOT_EMAIL} -d ${CERTBOT_DOMAIN1} -d ${CERTBOT_DOMAIN2} --agree-tos

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - REPO_USER=${DOCKER_HUB_USERNAME}
      - REPO_PASS=${DOCKER_HUB_ACCESS_TOKEN}
    command: --interval 300  # Checks for updates every 5 minutes

volumes:
  pgdata:
  certbot-ssl:
  certbot-challenge:

networks:
  scrtly-net:
    driver: bridge
