services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports: 
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - scrtly-net

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBIT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBIT_PASS}"
    ports:
      - '5672:5672'
      - '15672:15672'
      - "62400:61613"
      - '15674:15674'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq-plugins.conf:/etc/rabbitmq/plugins.conf:ro
    networks:
      - scrtly-net
      
  redis:
    image: redis:latest
    container_name: scrtly_redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - '6379:6379'
    networks:
      - scrtly-net
    volumes:
      - redis_data:/data

  backend:
    image: kamyloo/scrtly-backend
    restart: always
    env_file:
      - .env
    ports: 
      - "5001:5001"
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      SERVER_PORT: "5001"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/${POSTGRES_DB}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      SPRING_RABBITMQ_PORT: "5672"
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: "6379"
      SPRING_REDIS_PASSWORD: "${REDIS_PASSWORD}"
      MAIL_USERNAME: "${MAIL_USERNAME}"
      MAIL_PASSWORD: "${MAIL_PASSWORD}"
      SECRET_KEY: "${SECRET_KEY}"
      APPLICATION_FILE_CDN: "${APPLICATION_FILE_CDN}"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    volumes:
      - uploads:/uploads
    networks:
      - scrtly-net


  frontend:
    image: kamyloo/scrtly-frontend
    restart: always
    ports: 
      - "5002:5002"
    environment:
      VITE_APP_BACKEND_URL: https://api.zuvoria.pl/api
      VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY}
    depends_on:
      - backend
    networks:
      - scrtly-net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./certbot:/var/www/certbot
    command: >
      certonly
      --webroot -w /var/www/certbot
      --keep-until-expiring
      --email ${CERTBOT_EMAIL}
      -d ${CERTBOT_DOMAIN1}
      -d ${CERTBOT_DOMAIN2}
      -d ${CERTBOT_DOMAIN3}
      --agree-tos
    networks:
      - scrtly-net

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - REPO_USER=${DOCKER_HUB_USERNAME}
      - REPO_PASS=${DOCKER_HUB_ACCESS_TOKEN}
    command: --interval 300
    networks:
      - scrtly-net

volumes:
  pgdata:
  rabbitmq_data:
  redis_data:
  certbot-ssl:
  certbot-challenge:
  uploads:

networks:
  scrtly-net:
    driver: bridge
