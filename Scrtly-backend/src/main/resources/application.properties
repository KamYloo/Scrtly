spring.application.name=Scrtly-backend

spring.datasource.url=jdbc:postgresql://localhost:5432/scrtlyData
spring.datasource.username=postgres
spring.datasource.password=netlab12
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLInnoDBDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.file-size-threshold=2KB
spring.sql.init.mode=always


spring.mvc.async.request-timeout=3600000
server.port=8080
server.error.whitelabel.enabled=false

application.security.jwt.secret-key=${SECRET_KEY:defaultSecretValue}

application.file.image-dir=/uploads/
application.hls.directory=${application.file.image-dir}hls/
application.file.cdn=http://localhost:8080/api/uploads/

server.servlet.context-path=/api


#spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:rabbitmq}
#spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.stomp.port=62400
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.password=${REDIS_PASSWORD}
spring.cache.type=redis
spring.cache.redis.time-to-live=300s
spring.cache.redis.key-prefix=cache::

# Chat
chat.exchange=chat.exchange
chat.queue=chat.queue
chat.routing-key-prefix=room.
chat.binding-key-pattern=room.*

# Notification
notification.exchange=notification.exchange
notification.queue=notification.queue
notification.routing-key-prefix=notification.user.
notification.routing-key-pattern=notification.user.*

# Metrics
metrics.exchange=metrics.exchange
metrics.queue=metrics.queue
metrics.routing.view=metrics.view.artist
metrics.routing.play=metrics.play.song
metrics.routing.album=metrics.view.album

spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.template.mandatory=true

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

mailing.backend.activation-url=http://localhost:8080/api/auth/active
mailing.backend.reset-password-url=http://localhost:5173/change-password
mailing.backend.artistVerification-url=http://localhost:8080/api/admin/artist/verify
mailing.frontend.redirect-url=http://localhost:5173

#spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql=TRACE
spring.jpa.properties.hibernate.default_batch_fetch_size=20

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/oauth2/redirect

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# --- Stripe ---
stripe.apiKey=${STRIPE_API_KEY}
stripe.webhookSecret=${STRIPE_WEBHOOK_SECRET}
stripe.priceIdMonthly=${STRIPE_PRICE_ID_MONTHLY}
stripe.portalReturnUrl=http://localhost:5173/account/billing